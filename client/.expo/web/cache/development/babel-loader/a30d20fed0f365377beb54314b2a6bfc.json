{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _jsxFileName = \"/Users/edwardlam/Desktop/Mediconcen/client/App.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { Agenda } from \"react-native-calendars\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport AddConsultationForm from \"./components/AddConsultationForm\";\n\nvar convertToCalendarListItems = function convertToCalendarListItems(consultationRecordsArray) {\n  var items = {};\n  consultationRecordsArray.map(function (record) {\n    var datetime = record.datetime.split(\"T\");\n    var date = datetime[0];\n    var time = datetime[1].substring(0, 5);\n    date in items ? items[date].push(_objectSpread(_objectSpread({}, record), {}, {\n      time: time\n    })) : items[date] = [_objectSpread(_objectSpread({}, record), {}, {\n      time: time\n    })];\n  });\n  return items;\n};\n\nvar ConsultationDetails = function ConsultationDetails(_ref) {\n  var meeting = _ref.meeting;\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, \"Diagnosis: \", meeting.diagnosis), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, \"Medication: \", meeting.medication), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, \"Consultation Fee: \", meeting.consultation_fee), React.createElement(Text, {\n    style: {\n      color: \"gray\",\n      fontSize: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"(Press to hide details)\"));\n};\n\nvar ConsultationMeeting = function ConsultationMeeting(_ref2) {\n  var meeting = _ref2.meeting;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      showDetails = _useState2[0],\n      setShowDetails = _useState2[1];\n\n  return React.createElement(TouchableOpacity, {\n    style: styles.consul_Record,\n    onPress: function onPress() {\n      return setShowDetails(!showDetails);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 18,\n      fontWeight: \"600\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, \"Appointment time: \", meeting.time), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, \"Doctor: \", meeting.doctor_name), React.createElement(Text, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, \"Patient: \", meeting.patient_name), showDetails ? React.createElement(ConsultationDetails, {\n    meeting: meeting,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }) : React.createElement(Text, {\n    style: {\n      color: \"gray\",\n      fontSize: 15\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, \"(Press to show details)\"));\n};\n\nexport default function App() {\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      needRegister = _useState4[0],\n      setNeedRegister = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      items = _useState6[0],\n      setItems = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      token = _useState8[0],\n      setToken = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isAuthenticated = _useState10[0],\n      setIsAuthenticated = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      createConsultation = _useState12[0],\n      setCreateConsultation = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      _useState14 = _slicedToArray(_useState13, 2),\n      clinicId = _useState14[0],\n      setClinicId = _useState14[1];\n\n  useEffect(function () {\n    var config = {\n      headers: {\n        \"x-auth-token\": token\n      }\n    };\n    isAuthenticated && function _callee() {\n      var res, _items;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"http://localhost:5000/api/consultations\", config));\n\n            case 3:\n              res = _context.sent;\n              _items = convertToCalendarListItems(res.data);\n              setItems(_items);\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              console.error(_context.t0);\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 8]], Promise);\n    }();\n  }, [isAuthenticated]);\n  return !isAuthenticated ? needRegister ? React.createElement(Register, {\n    setNeedRegister: setNeedRegister,\n    setToken: setToken,\n    setIsAuthenticated: setIsAuthenticated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }) : React.createElement(Login, {\n    setNeedRegister: setNeedRegister,\n    setToken: setToken,\n    setIsAuthenticated: setIsAuthenticated,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }) : !createConsultation ? React.createElement(Agenda, {\n    style: styles.calendarList,\n    items: items,\n    renderItem: function renderItem(item) {\n      return React.createElement(ConsultationMeeting, {\n        meeting: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 16\n        }\n      });\n    },\n    renderEmptyData: function renderEmptyData() {\n      return React.createElement(View, {\n        style: styles.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }\n      }, React.createElement(Text, {\n        style: _objectSpread(_objectSpread({}, styles.mediumFont), {}, {\n          color: \"gray\"\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }\n      }, \"No Scheduled Appointment\"), React.createElement(TouchableOpacity, {\n        style: styles.button,\n        onPress: setCreateConsultation(!createConsultation),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 15\n        }\n      }, \"Create Consultation\")));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }) : React.createElement(AddConsultationForm, {\n    clin_id: \"7\",\n    setCreateConsultation: setCreateConsultation,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 5\n    }\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\"\n  },\n  button: {\n    backgroundColor: \"dodgerblue\",\n    color: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 100,\n    height: 45,\n    margin: 20\n  },\n  calendarList: {\n    flex: 1,\n    marginVertical: 40\n  },\n  consul_Record: {\n    flex: 3,\n    minHeight: 80,\n    padding: 20,\n    margin: 10,\n    marginRight: 20,\n    backgroundColor: \"white\",\n    borderLeftColor: \"#B0C4DE\",\n    borderLeftWidth: 15\n  },\n  message: {\n    flex: 1,\n    backgroundColor: \"whitesmoke\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  authForm: {\n    flex: 1,\n    alignContent: \"center\",\n    justifyContent: \"space-evenly\",\n    margin: 50\n  },\n  title: {\n    fontSize: 40,\n    fontWeight: \"bold\"\n  },\n  fieldTitle: {\n    fontSize: 30\n  },\n  mediumFont: {\n    fontSize: 20\n  }\n});","map":{"version":3,"sources":["/Users/edwardlam/Desktop/Mediconcen/client/App.js"],"names":["axios","React","useState","useEffect","Agenda","Login","Register","AddConsultationForm","convertToCalendarListItems","consultationRecordsArray","items","map","record","datetime","split","date","time","substring","push","ConsultationDetails","meeting","diagnosis","medication","consultation_fee","color","fontSize","ConsultationMeeting","showDetails","setShowDetails","styles","consul_Record","fontWeight","doctor_name","patient_name","App","needRegister","setNeedRegister","setItems","token","setToken","isAuthenticated","setIsAuthenticated","createConsultation","setCreateConsultation","clinicId","setClinicId","config","headers","get","res","data","console","error","calendarList","item","message","mediumFont","button","StyleSheet","create","container","flex","justifyContent","backgroundColor","alignItems","width","height","margin","marginVertical","minHeight","padding","marginRight","borderLeftColor","borderLeftWidth","authForm","alignContent","title","fieldTitle"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { StyleSheet, View, Text, TouchableOpacity, Button } from \"react-native\";\nimport { Agenda } from \"react-native-calendars\";\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport AddConsultationForm from \"./components/AddConsultationForm\";\n\n// Convert consultation record data to format accepted for Agendar items\nconst convertToCalendarListItems = (consultationRecordsArray) => {\n  let items = {};\n  consultationRecordsArray.map((record) => {\n    let datetime = record.datetime.split(\"T\");\n    let date = datetime[0];\n    let time = datetime[1].substring(0, 5);\n    date in items\n      ? items[date].push({ ...record, time })\n      : (items[date] = [{ ...record, time }]);\n  });\n  return items;\n};\n\n// Consultation details\nconst ConsultationDetails = ({ meeting }) => {\n  return (\n    <View>\n      <Text>Diagnosis: {meeting.diagnosis}</Text>\n      <Text>Medication: {meeting.medication}</Text>\n      <Text>Consultation Fee: {meeting.consultation_fee}</Text>\n      <Text style={{ color: \"gray\", fontSize: 15 }}>\n        (Press to hide details)\n      </Text>\n    </View>\n  );\n};\n\n// Agenda renderItem component\nconst ConsultationMeeting = ({ meeting }) => {\n  const [showDetails, setShowDetails] = useState(false);\n  return (\n    <TouchableOpacity\n      style={styles.consul_Record}\n      onPress={() => setShowDetails(!showDetails)}\n    >\n      <Text style={{ fontSize: 18, fontWeight: \"600\" }}>\n        Appointment time: {meeting.time}\n      </Text>\n      <Text>Doctor: {meeting.doctor_name}</Text>\n      <Text>Patient: {meeting.patient_name}</Text>\n      {showDetails ? (\n        <ConsultationDetails meeting={meeting} />\n      ) : (\n        <Text style={{ color: \"gray\", fontSize: 15 }}>\n          (Press to show details)\n        </Text>\n      )}\n    </TouchableOpacity>\n  );\n};\n\nexport default function App() {\n  // switching between login and register\n  let [needRegister, setNeedRegister] = useState(false);\n  // items for Agenda\n  let [items, setItems] = useState({});\n  // token received from either login or register\n  let [token, setToken] = useState(\"\");\n  // login/ reister should set isAuthenticated to true\n  let [isAuthenticated, setIsAuthenticated] = useState(false);\n  // For displaying AddConsultationForm\n  let [createConsultation, setCreateConsultation] = useState(false);\n  // clinic id coming from useEffect...\n  let [clinicId, setClinicId] = useState(\"\");\n\n  // fetch consultation records associated with the clinic on mount\n  useEffect(() => {\n    const config = {\n      headers: {\n        \"x-auth-token\": token,\n      },\n    };\n    isAuthenticated &&\n      (async () => {\n        try {\n          const res = await axios.get(\n            \"http://localhost:5000/api/consultations\",\n            config\n          );\n          let items = convertToCalendarListItems(res.data);\n\n          setItems(items);\n        } catch (err) {\n          console.error(err);\n        }\n      })();\n  }, [isAuthenticated]);\n\n  return !isAuthenticated ? (\n    needRegister ? (\n      <Register\n        setNeedRegister={setNeedRegister}\n        setToken={setToken}\n        setIsAuthenticated={setIsAuthenticated}\n      />\n    ) : (\n      <Login\n        setNeedRegister={setNeedRegister}\n        setToken={setToken}\n        setIsAuthenticated={setIsAuthenticated}\n      />\n    )\n  ) : !createConsultation ? (\n    <Agenda\n      style={styles.calendarList}\n      items={items}\n      renderItem={(item) => {\n        return <ConsultationMeeting meeting={item} />;\n      }}\n      renderEmptyData={() => {\n        return (\n          <View style={styles.message}>\n            <Text style={{ ...styles.mediumFont, color: \"gray\" }}>\n              No Scheduled Appointment\n            </Text>\n            <TouchableOpacity\n              style={styles.button}\n              onPress={setCreateConsultation(!createConsultation)}\n            >\n              <Text>Create Consultation</Text>\n            </TouchableOpacity>\n          </View>\n        );\n      }}\n    />\n  ) : (\n    <AddConsultationForm\n      clin_id={\"7\"}\n      setCreateConsultation={setCreateConsultation}\n    />\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    // alignItems: \"center\",\n  },\n  button: {\n    backgroundColor: \"dodgerblue\",\n    color: \"white\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 100,\n    height: 45,\n    margin: 20,\n  },\n  calendarList: {\n    flex: 1,\n    marginVertical: 40,\n  },\n  consul_Record: {\n    flex: 3,\n    minHeight: 80,\n    padding: 20,\n    margin: 10,\n    marginRight: 20,\n    backgroundColor: \"white\",\n    borderLeftColor: \"#B0C4DE\",\n    borderLeftWidth: 15,\n  },\n  message: {\n    flex: 1,\n    backgroundColor: \"whitesmoke\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  authForm: {\n    flex: 1,\n    alignContent: \"center\",\n    justifyContent: \"space-evenly\",\n    margin: 50,\n  },\n  title: {\n    fontSize: 40,\n    fontWeight: \"bold\",\n  },\n  fieldTitle: {\n    fontSize: 30,\n  },\n  mediumFont: {\n    fontSize: 20,\n  },\n});\n"]},"metadata":{},"sourceType":"module"}